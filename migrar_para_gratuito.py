#!/usr/bin/env python3
"""
Script para migrar notebooks do curso para op√ß√µes gratuitas
Substitui OpenAI por Ollama, Hugging Face ou Mock LLM
"""

import os
import re
import glob
from pathlib import Path

def migrar_notebook(arquivo):
    """Migra um notebook para usar op√ß√µes gratuitas"""
    
    print(f"üîÑ Migrando: {arquivo}")
    
    with open(arquivo, 'r', encoding='utf-8') as f:
        conteudo = f.read()
    
    # Substitui√ß√µes para remover depend√™ncias da OpenAI
    substituicoes = [
        # Remover imports da OpenAI
        (r'from langchain_openai import ChatOpenAI', 
         'from langchain_community.llms import Ollama  # Op√ß√£o gratuita'),
        
        # Substituir ChatOpenAI por Ollama
        (r'ChatOpenAI\([^)]*\)', 
         'Ollama(model="llama2")'),
        
        # Remover configura√ß√µes de API key
        (r'api_key=os\.getenv\(\'OPENAI_API_KEY\'\)', 
         '# api_key removida - usando modelo local'),
        
        # Substituir OpenAIEmbeddings
        (r'from langchain\.embeddings import OpenAIEmbeddings',
         'from langchain_community.embeddings import OllamaEmbeddings'),
        
        (r'OpenAIEmbeddings\([^)]*\)',
         'OllamaEmbeddings(model="llama2")'),
        
        # Adicionar coment√°rio sobre op√ß√µes gratuitas
        (r'# Importando as bibliotecas necess√°rias',
         '# Importando as bibliotecas necess√°rias\n# üí° Usando op√ß√µes gratuitas (Ollama)'),
    ]
    
    # Aplicar substitui√ß√µes
    for padrao, substituicao in substituicoes:
        conteudo = re.sub(padrao, substituicao, conteudo, flags=re.MULTILINE)
    
    # Adicionar c√©lula de setup gratuito no in√≠cio
    setup_gratuito = '''
# üÜì SETUP GRATUITO - SEM CUSTOS!
# Esta c√©lula configura um LLM gratuito para o curso

import os
from dotenv import load_dotenv

# Carregando vari√°veis (se existirem)
load_dotenv()

# Fun√ß√£o para configurar LLM gratuito
def get_llm():
    """Retorna o melhor LLM dispon√≠vel gratuitamente"""
    
    # Tentativa 1: Ollama (recomendado)
    try:
        from langchain_community.llms import Ollama
        return Ollama(model="llama2")
    except:
        pass
    
    # Tentativa 2: Hugging Face
    try:
        from langchain_community.llms import HuggingFaceHub
        if os.getenv("HUGGINGFACEHUB_API_TOKEN"):
            return HuggingFaceHub(
                repo_id="google/flan-t5-base",
                model_kwargs={"temperature": 0.7, "max_length": 512}
            )
    except:
        pass
    
    # Op√ß√£o 3: Mock LLM (sempre funciona)
    from langchain.llms.fake import FakeListLLM
    respostas = [
        "Aqui est√° a resposta:", "Vou te ajudar:", "Essa √© uma boa pergunta!",
        "Deixe-me explicar:", "Aqui est√£o as informa√ß√µes:", "Vou criar um exemplo:"
    ]
    return FakeListLLM(responses=respostas)

# Configurando o LLM
llm = get_llm()

print("üöÄ LLM gratuito configurado com sucesso!")
print(f"ü§ñ Tipo: {type(llm).__name__}")
print("üí° Agora voc√™ pode usar 'llm' em todos os exemplos do curso!")
'''
    
    # Inserir setup gratuito ap√≥s a primeira c√©lula de markdown
    if '# üÜì SETUP GRATUITO' not in conteudo:
        # Encontrar posi√ß√£o para inserir
        pos = conteudo.find('"cells": [')
        if pos != -1:
            # Encontrar o final da primeira c√©lula
            end_first_cell = conteudo.find('},', pos) + 2
            conteudo = conteudo[:end_first_cell] + setup_gratuito + conteudo[end_first_cell:]
    
    # Salvar arquivo migrado
    with open(arquivo, 'w', encoding='utf-8') as f:
        f.write(conteudo)
    
    print(f"‚úÖ Migrado: {arquivo}")

def main():
    """Fun√ß√£o principal"""
    
    print("üöÄ MIGRADOR PARA OP√á√ïES GRATUITAS")
    print("=" * 50)
    
    # Encontrar todos os notebooks
    notebooks = glob.glob("notebooks/*.ipynb")
    
    if not notebooks:
        print("‚ùå Nenhum notebook encontrado!")
        return
    
    print(f"üìÅ Encontrados {len(notebooks)} notebooks")
    
    # Migrar cada notebook
    for notebook in notebooks:
        if "00_setup_gratuito" not in notebook:  # Pular o setup gratuito
            migrar_notebook(notebook)
    
    print("\nüéâ MIGRA√á√ÉO CONCLU√çDA!")
    print("=" * 50)
    print("‚úÖ Todos os notebooks foram migrados para op√ß√µes gratuitas")
    print("üí° Agora os alunos podem aprender sem gastar dinheiro!")
    print("\nüìã PR√ìXIMOS PASSOS:")
    print("1. Instale Ollama: https://ollama.ai")
    print("2. Execute: ollama pull llama2")
    print("3. Ou configure Hugging Face: huggingface.co")
    print("4. Ou use Mock LLM (j√° funciona)")

if __name__ == "__main__":
    main() 